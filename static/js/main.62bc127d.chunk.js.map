{"version":3,"sources":["Containers/ExamScreen/exams.module.css","Containers/StreamContainer/streams.module.css","Containers/ExamScreen/Exams.js","Containers/StreamContainer/Streams.js","Containers/LandingScreen/Landing.js","Components/quizService/index.js","Components/components/QuestionBox.js","Components/Quizcomponent/Quiz.js","Components/QuestionPage/questions.js","Components/Navbarcomponent/NavigationBar.js","Components/SidebarComponent/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Exams","title","stream","rank","image","history","useHistory","className","style","exams","paragraph","src","alt","onClick","push","button","type","Streams","streams","Landing","useState","answers","setAnswers","streaminfo","setStreaminfo","search","setSearch","useEffect","getDetails","a","fetch","response","json","result","console","log","data","filteredItems","filter","answer","name","toLowerCase","includes","onSubmit","e","preventDefault","onChange","target","value","map","key","logo","black","qBank","question","correct","questionId","n","Promise","resolve","sort","Math","random","slice","QuestionBox","options","selected","setAnswer","text","index","Quiz","state","questionBank","previousquestionBank","score","responses","getQuestions","quizService","then","setState","computeAnswer","correctAnswer","nextQuestionList","previousQuestionList","this","length","Component","Questions","api_key","api_secret","_id","axios","post","res","makePostRequest","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Form","FormControl","placeholder","Collapse","id","Nav","Item","Link","StyledSideNav","SideNav","props","onItemClick","path","activePath","location","pathname","items","css","item","active","React","RouterSideNav","withRouter","StyledNavItem","NavItem","handleClick","to","NavIcon","Sidebar","App","Fragment","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62bc127d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"exams\":\"exams_exams__r-C25\",\"image\":\"exams_image__3305y\",\"paragraph\":\"exams_paragraph__2_e_-\",\"button\":\"exams_button__9BXeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"streams\":\"streams_streams__14t8H\",\"image\":\"streams_image__1iFvv\"};","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport style from \"./exams.module.css\";\r\nconst Exams = ({title,stream,rank,image}) => {\r\n    \r\n    \r\n    const history = useHistory();\r\n    const navigateTo = () => history.push('/about');\r\n\r\n    \r\n\r\n   return(\r\n       <div className={style.exams}>\r\n           <h1>{title}</h1>\r\n           <p className={style.paragraph}>Stream : {stream}</p>\r\n           <p className={style.paragraph}>Rank : {rank}</p>\r\n           <img className={style.image} src={image} alt=\"\" />\r\n\r\n           <button onClick={navigateTo} className={style.button} type=\"submit\">\r\n                    Next Page\r\n           </button>\r\n       </div>\r\n   )\r\n}\r\nexport default Exams;","import React from 'react';\r\nimport style from \"./streams.module.css\";\r\n\r\nconst Streams = ({title,rank,image}) => {\r\n   return(\r\n       <div className={style.streams}>\r\n           <h1>{title}</h1>\r\n            <p>Rank : {rank}</p>\r\n           <img  className={style.image} src={image} alt=\"\" />\r\n       </div>\r\n   )\r\n}\r\nexport default Streams;","import React, { useEffect,useState} from 'react';\r\nimport Exams from '../ExamScreen/Exams';\r\nimport Streams from '../StreamContainer/Streams';\r\nimport \"./Landing.css\";\r\n\r\n\r\nconst Landing = () => {\r\n    \r\n    const [answers,setAnswers] = useState([]);\r\n    const [streaminfo,setStreaminfo] = useState([]);\r\n\r\n    const [search,setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n      getDetails();\r\n    }, [search]);\r\n\r\n    const getDetails = async () => {\r\n    \r\n    const response = await fetch('https://www.exambazaar.com/api/coding-round/routes/exam-info/8875367061');\r\n    const result = await response.json();\r\n    console.log(result);\r\n    setAnswers(result.data.exams);\r\n    setStreaminfo(result.data.streams);\r\n    \r\n   \r\n    }\r\n\r\n    const getSearch = e => {\r\n        e.preventDefault();\r\n        setSearch('');\r\n    }\r\n    const filteredItems = answers.filter(answer => {\r\n        return answer.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n\r\n    return(\r\n         <div className=\"Landing\">\r\n               <form onSubmit={getSearch} className=\"search-from\">\r\n                 <input className=\"search-bar\" type=\"text\" onChange={e => setSearch(e.target.value)} ></input>\r\n                 <button className=\"search-button\" type=\"submit\">\r\n                     Search here!\r\n                 </button>\r\n             </form>\r\n\r\n             <h1 className=\"text\">Various Examinations</h1>\r\n             <div className=\"exams\">\r\n             {filteredItems.map(answer => (\r\n                 <Exams \r\n                 key={answer.name}\r\n                 title={answer.name}\r\n                 rank={answer.rank}\r\n                 stream={answer.stream} \r\n                 image={answer.logo} \r\n                 />\r\n             ))} \r\n             </div>\r\n\r\n             <h1 className=\"text\">Various Streams</h1>\r\n             <div className=\"streams\">\r\n                 {streaminfo.map(stream => (\r\n                     <Streams \r\n                     key={stream.name} \r\n                     title={stream.name} \r\n                     rank={stream.rank} \r\n                     image={stream.logo.black}\r\n                     />\r\n                 ))}\r\n             </div>\r\n         </div>\r\n     )\r\n}\r\n\r\nexport default Landing;","const qBank = [\r\n    {\r\n      question:\r\n      \"What is the derivative of Acceleration with respect to time?\",\r\n      answers: [\"Jerk\", \"Shift\", \"Bump\", \"Slide\"],\r\n      correct: \"Jerk\",\r\n      questionId: \"099099\"\r\n    },\r\n    {\r\n      question: \"How many zeptometres are inside one femtometre?\",\r\n      answers: [\r\n        \"10\",\r\n        \"1,000,000,000\",\r\n        \"1000\",\"1,000,000\"\r\n      ],\r\n      correct: \"1,000,000\",\r\n      questionId: \"183452\"\r\n    },\r\n    {\r\n      question:\r\n        \"Which company did Valve cooperate with in the creation of the Vive?\",\r\n      answers: [\"HTC\", \"Oculus\", \"Google\", \"Razer\"],\r\n      correct: \"HTC\",\r\n      questionId: \"267908\"\r\n    },\r\n    {\r\n      \"question\": \"The binary number 101001101 is equivalent to the Decimal number 334 \",\r\n      correct: \"False\",\r\n      answers: [\r\n        \"True\",\"False\"\r\n      ],\r\n      questionId: \"333247\"\r\n    },\r\n    {\r\n      question: \"If you could fold a piece of paper in half 50 times, its&#039; thickness will be 3/4th the distance from the Earth to the Sun.\",\r\n      \r\n      answers: [\r\n        \"False\",\"True\"\r\n      ],\r\n      correct:\"True\",\r\n      questionId: \"496293\"\r\n    },\r\n    {\r\n      question: \"The decimal number 31 in hexadecimal would be what?\",\r\n       \r\n      answers: [\r\n        \"3D\",\r\n        \"2E\",\r\n        \"1B\",\r\n        \"1F\"\r\n      ],\r\n      correct:\"1F\",\r\n      questionId: \"588909\"\r\n    },\r\n    {\r\n      question: \"Which of these numbers is closest to the total number of possible states for an army standard Enigma Machine?\",\r\n      correct: \"1.58 x 10^20\",\r\n      answers: [\r\n        \"1.58 x 10^22\",\r\n        \"1.58 x  10^18\",\r\n        \"1.58 x 10^24\",\r\n        \"1.58 x 10^20\"\r\n      ],\r\n      questionId: \"648452\"\r\n    },\r\n    {\r\n      question: \"What is the molecular formula of Glucose?\",\r\n      correct: \"C6H12O6\",\r\n      answers: [\r\n        \"C2H4O2\",\r\n        \"K+\",\r\n        \"CH4\",\r\n        \"C6H12O6\"\r\n      ],\r\n      questionId: \"786649\"\r\n    },\r\n    {\r\n      question: \"All of the following human genetic haplogroup names are shared between Y-chromosome and mitochondrial DNA haplogroups EXCEPT:\",\r\n      correct: \"Haplogroup U\",\r\n      answers: [\r\n        \"Haplogroup L\",\r\n        \"Haplogroup T\",\r\n        \"Haplogroup J\",\r\n        \"Haplogroup U\"\r\n      ],\r\n      questionId: \"839754\"\r\n    },\r\n    {\r\n      question: \"The value of one Calorie is different than the value of one calorie.\",\r\n      correct: \"True\",\r\n      answers: [\r\n        \"False\",\"True\"\r\n      ],\r\n      questionId: \"98390\"\r\n    },\r\n    {\r\n      question: \"Which of the following is NOT a word used to describe an earthquake?\",\r\n      correct: \"Drop-slide\",\r\n      answers: [\r\n        \"Foreshock\",\r\n        \"Strike-slip\",\r\n        \"Temblor\",\r\n        \"Drop-slide\"\r\n      ],\r\n      questionId: \"1071006\"\r\n    },\r\n    {\r\n      question: \"Which scientific unit is named after an Italian nobleman?\",\r\n      correct: \"Volt\",\r\n      answers: [\r\n        \"Pascal\",\r\n        \"Ohm\",\r\n        \"Hertz\",\r\n        \"Volt\"\r\n      ],\r\n      questionId: \"1174154\"\r\n    },\r\n    {\r\n      question: \"The internet domain .fm is the country-code top-level domain for which Pacific Ocean island nation?\",\r\n      correct: \"Micronesia\",\r\n      answers: [\r\n        \"Fiji\",\r\n        \"Tuvalu\",\r\n        \"Marshall Islands\",\r\n        \"Micronesia\"\r\n      ],\r\n      questionId: \"1226535\"\r\n    },\r\n    {\r\n      question: \"Which of these names was an actual codename for a cancelled Microsoft project?\",\r\n      correct: \"Neptune\",\r\n      answers: [\r\n        \"Enceladus\",\r\n        \"Pollux\",\r\n        \"Saturn\",\r\n        \"Neptune\"\r\n      ],\r\n      questionId: \"1310938\"\r\n    },\r\n    {\r\n      question: \"Which of the following is the oldest of these computers by release date?\",\r\n      correct: \"TRS-80\",\r\n      answers: [\r\n        \"Commodore 64\",\r\n        \"ZX Spectrum\",\r\n        \"Apple 3\",\r\n        \"TRS-80\"\r\n      ],\r\n      questionId: \"1436873\"\r\n    },\r\n    {\r\n      question: \"Which of these is not a key value of Agile software development?\",\r\n      correct: \"Comprehensive documentation\",\r\n      answers: [\r\n        \"Individuals and interactions\",\r\n        \"Customer collaboration\",\r\n        \"Responding to change\",\r\n        \"Comprehensive documentation\"\r\n      ],\r\n      questionId: \"1515110\"\r\n    },\r\n     \r\n  ];\r\n  \r\n  export default (n = 1) =>\r\n    Promise.resolve(qBank.sort(() => 0.1 - Math.random()).slice(0, n));\r\n  ","import React, {useState} from \"react\";\r\n\r\nconst QuestionBox = ({question, options, selected}) => {\r\n  const [answer, setAnswer] = useState(options);\r\n  return (\r\n    <div className=\"questionBox\">\r\n      <div className=\"question\">{question}</div>\r\n      {answer.map((text, index) => (\r\n        <button\r\n          key={index}\r\n          className=\"answerBtn\"\r\n          onClick={() => {\r\n            setAnswer([text]);\r\n            selected(text);\r\n          }}\r\n        >\r\n          {text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n\r\n","import React,{ Component } from 'react';\r\nimport \"../assets/style.css\";\r\nimport quizService from '../quizService';\r\nimport QuestionBox from '../components/QuestionBox';\r\n\r\nclass Quiz extends Component{\r\n\r\n    state={\r\n        questionBank : [],\r\n        previousquestionBank:[],\r\n        score: 0,\r\n        responses: 0\r\n    };\r\n\r\n    getQuestions = () => {\r\n        quizService().then(question => {\r\n            this.setState({\r\n            \r\n               questionBank:question,\r\n               previousquestionBank : this.state.questionBank\r\n            });\r\n        });\r\n    };\r\n\r\n    \r\n    computeAnswer = (answer,correctAnswer) => {\r\n        if(answer === correctAnswer)\r\n        {\r\n            this.setState({\r\n                score : this.state.score + 1\r\n            });\r\n        }\r\n    }\r\n    nextQuestionList = e => {\r\n       this.getQuestions();\r\n    }\r\n\r\n    previousQuestionList = () => {\r\n          this.setState({previousquestionBank:this.state.questionBank});\r\n          this.setState({questionBank:this.state.previousquestionBank});\r\n    \r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getQuestions();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"title\">Questions</div>\r\n                {this.state.questionBank.length > 0 && this.state.questionBank.map(({question,answers,correct,questionId}) => (\r\n                    <QuestionBox \r\n                       question={question}\r\n                       options={answers}\r\n                       key={questionId}\r\n                       selected={answer => this.computeAnswer(answer,correct)}\r\n                    />\r\n                ))}\r\n                <button onClick={this.previousQuestionList} className=\"primaryBtn\">Previous</button>\r\n                <button onClick={this.nextQuestionList} className=\"secondaryBtn\">Next</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React ,{ useEffect } from 'react';\r\nimport Quiz from '../Quizcomponent/Quiz';\r\nimport axios from 'axios';\r\n\r\nexport const Questions = () => {\r\n\r\n    useEffect(() => {\r\n       makePostRequest();\r\n    },[])\r\n\r\n    // const getAnswers = async () => {\r\n\r\n    //     const response = await fetch(\"https://opentdb.com/api.php?amount=10&category=19&difficulty=hard&type=multiple\");\r\n    //     const result = await response.json();\r\n    //     console.log(result);\r\n    // }\r\n\r\n//     const getDetails = () => {\r\n//         fetch(\"https://www.exambazaar.com/api/coding-round/routes/random-question\", { \r\n      \r\n    \r\n//     method: \"POST\", \r\n      \r\n    \r\n//     body: JSON.stringify({ \r\n//         api_key:\"8875367061\",\r\n//         api_secret:\"5ee99b11fee66d5d284e4ccb\",\r\n//         _id:\"58ac22ac3cfd4f32bccf8a81\"\r\n//     }), \r\n//     headers: { \r\n//         \"Content-type\": \"application/json\"\r\n//     } \r\n// }) \r\n  \r\n \r\n// .then(response => response.json()) \r\n// .then(json => console.log(json)); \r\n//     }\r\n// const headers = {\r\n//     'Content-Type': 'application/json',\r\n//     'Authorization': 'JWT fefege...'\r\n//   }\r\n//    const getDetails = async () => {\r\n\r\n//     const response = await axios({\r\n//         method: 'post',\r\n//         url: 'https://www.exambazaar.com/api/coding-round/routes/random-question',\r\n//         data: {\r\n//           api_key:\"8875367061\",\r\n//           api_secret:\"5ee99b11fee66d5d284e4ccb\",\r\n//           _id:\"58ac2c317e852a2c401a8c3a\"\r\n\r\n//         },\r\n//         headers : {\r\n//             'Content-Type': 'application/json',\r\n//             'Authorization': 'JWT fefege...'\r\n//         }\r\n//       });\r\n\r\n      \r\n\r\n//       console.log(response);   \r\n//     }\r\n\r\nasync function makePostRequest() {\r\n\r\n    const data = {\r\n        api_key:\"8875367061\",\r\n        api_secret:\"5ee99b11fee66d5d284e4ccb\",\r\n       _id:\"58ac2c317e852a2c401a8c3a\"\r\n      }\r\n\r\n    let res = await axios.post('https://www.exambazaar.com/api/coding-round/routes/random-question', data);\r\n\r\n    console.log(res.data);\r\n}\r\n    return(\r\n        <div className=\"questions\">\r\n            <h1 className=\"text\">Questions</h1>\r\n             <Quiz />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #222; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand {\r\n    font-size: 1.4em;\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\nconst NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">Exambazaar</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Form className=\"form-center\">\r\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"\" />\r\n      </Form>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item> \r\n          <Nav.Item><Nav.Link href=\"/about\">Questions</Nav.Link></Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles>\r\n)\r\nexport default NavigationBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {  Link, withRouter } from \"react-router-dom\";\r\n\r\nconst StyledSideNav = styled.div`   \r\n    position: fixed;\r\n    height: 100%;\r\n    width: 60px;     \r\n    z-index:1;   \r\n    top: 3.4em;      \r\n    background-color: #222; \r\n    overflow-x: hidden;     \r\n    padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePath: props.location.pathname,\r\n            items: [\r\n                {\r\n                  path: '/', \r\n                  name: 'Home',\r\n                  css: 'fa fa-fw fa-home',\r\n                  key: 1 \r\n                },\r\n                {\r\n                  path: '/about',\r\n                  name: 'Questions',\r\n                  css: 'fa fa-fw fa-clock',\r\n                  key: 2\r\n                }\r\n              ]\r\n        }\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { items, activePath } = this.state;\r\n        return(\r\n            <StyledSideNav>\r\n                {\r\n                    items.map((item) => {\r\n                        return (\r\n                            <NavItem \r\n                                path={item.path}\r\n                                name={item.name}\r\n                                css={item.css}\r\n                                onItemClick={this.onItemClick}\r\n                                active={item.path === activePath}\r\n                                key={item.key}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n    }\r\n}\r\n\r\nconst RouterSideNav = withRouter(SideNav);\r\n\r\nconst StyledNavItem = styled.div`\r\n    height: 70px;\r\n    width: 75px; \r\n    text-align: center; \r\n    margin-bottom: 0;   \r\n    a {\r\n        font-size: 2.7em;\r\n        color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n        :hover {\r\n            opacity: 0.7;\r\n            text-decoration: none; \r\n        }  \r\n    }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.props;\r\n        return(\r\n            <StyledNavItem active={active}>\r\n                <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n                    <NavIcon></NavIcon>\r\n                </Link>\r\n            </StyledNavItem>\r\n        );\r\n    }\r\n}\r\n\r\nconst NavIcon = styled.div`\r\n`;\r\n\r\nexport default class Sidebar extends React.Component {\r\n    render() {\r\n        return (\r\n            <RouterSideNav></RouterSideNav>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Landing from './Containers/LandingScreen/Landing';\r\nimport {Questions} from './Components/QuestionPage/questions';\r\nimport NavigationBar from './Components/Navbarcomponent/NavigationBar';\r\nimport Sidebar from './Components/SidebarComponent/Sidebar';\r\n\r\nfunction App() {\r\n  return (\r\n     \r\n        <React.Fragment>\r\n         <Router>\r\n           <NavigationBar />\r\n           <Sidebar />\r\n           \r\n          \r\n\r\n          <Switch>\r\n             <Route exact path=\"/\" component={Landing}></Route>\r\n             <Route path=\"/about\" component={Questions}></Route>\r\n             \r\n          </Switch>\r\n        </Router>\r\n      </React.Fragment>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}